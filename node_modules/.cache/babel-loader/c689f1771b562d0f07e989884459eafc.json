{"ast":null,"code":"var _jsxFileName = \"/Users/knalawade/blog/multiple-file-upload/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFilesFromEvent = event => {\n  return Array.prototype.slice.call(event.target.files);\n};\n\nfunction App() {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const handleUploadFiles = files => {\n    const uploaded = [...uploadedFiles];\n    let limitExceeded = false;\n    files.forEach(file => {\n      if (uploaded.findIndex(f => f.name === file.name) === -1) {\n        uploaded.push(file);\n        if (uploaded.length === 3) setLimit(true);\n\n        if (uploaded.length > MAX_SIZE.count) {\n          // console.log('limit reached')\n          alert('You can only add a maximum of three files');\n          setLimit(false);\n          limitExceeded = true;\n          return;\n        }\n      } // handleFileEvent(file)\n\n    });\n    setUploadedFiles(uploaded);\n  };\n\n  const handleFileEvent = e => {\n    // const chosenFiles =  getFilesFromEvent(e);\n    const chosenFiles = Array.prototype.slice.call(e.target.files);\n    handleUploadFiles(chosenFiles);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"fileUpload\",\n      type: \"file\",\n      multiple: true,\n      accept: \"application/pdf, image/png\",\n      onChange: handleFileEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fileUpload\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn btn-primary\",\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-files-list\",\n      children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"+65XWmZ3IQzrOB7vdBp7tbCqjTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","getFilesFromEvent","event","Array","prototype","slice","call","target","files","App","uploadedFiles","setUploadedFiles","handleUploadFiles","uploaded","limitExceeded","forEach","file","findIndex","f","name","push","length","setLimit","MAX_SIZE","count","alert","handleFileEvent","e","chosenFiles","map"],"sources":["/Users/knalawade/blog/multiple-file-upload/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css'\n\nconst getFilesFromEvent = event => {\n    return Array.prototype.slice.call(event.target.files);\n}\n\nfunction App() {\n\n\tconst [uploadedFiles, setUploadedFiles] = useState([])\n\n\n    const handleUploadFiles = files => {\n        const uploaded = [...uploadedFiles];\n        let limitExceeded = false;\n        files.forEach((file) => {\n            if (uploaded.findIndex((f) => f.name === file.name) === -1) {\n                uploaded.push(file);\n                if (uploaded.length === 3) setLimit(true);\n                if (uploaded.length > MAX_SIZE.count) {\n                // console.log('limit reached')\n                alert('You can only add a maximum of three files');\n                setLimit(false);\n                limitExceeded = true;\n                return;\n                }\n            }\n\n            // handleFileEvent(file)\n        })\n        setUploadedFiles(uploaded)\n\n    }\n\n    const handleFileEvent =  (e) => {\n        // const chosenFiles =  getFilesFromEvent(e);\n        const chosenFiles = Array.prototype.slice.call(e.target.files)\n        handleUploadFiles(chosenFiles);\n    }\n\treturn (\n\t\t<div className=\"App\">\n\n\t\t\t<input id='fileUpload' type='file' multiple\n\t\t\t\t\taccept='application/pdf, image/png'\n                    onChange={handleFileEvent}\n\t\t\t/>\n\t\t\t<label htmlFor='fileUpload'>\n\t\t\t\t<a  className=\"btn btn-primary\">Upload Files</a>\n\t\t\t</label>\n\n\t\t\t<div className=\"uploaded-files-list\">\n\t\t\t\t{uploadedFiles.map(file => (\n                    <div >\n                        {file.name}\n                    </div>\n                ))}\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;EAC/B,OAAOC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,KAAK,CAACK,MAAN,CAAaC,KAAxC,CAAP;AACH,CAFD;;AAIA,SAASC,GAAT,GAAe;EAAA;;EAEd,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;;EAGG,MAAMY,iBAAiB,GAAGJ,KAAK,IAAI;IAC/B,MAAMK,QAAQ,GAAG,CAAC,GAAGH,aAAJ,CAAjB;IACA,IAAII,aAAa,GAAG,KAApB;IACAN,KAAK,CAACO,OAAN,CAAeC,IAAD,IAAU;MACpB,IAAIH,QAAQ,CAACI,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWH,IAAI,CAACG,IAA1C,MAAoD,CAAC,CAAzD,EAA4D;QACxDN,QAAQ,CAACO,IAAT,CAAcJ,IAAd;QACA,IAAIH,QAAQ,CAACQ,MAAT,KAAoB,CAAxB,EAA2BC,QAAQ,CAAC,IAAD,CAAR;;QAC3B,IAAIT,QAAQ,CAACQ,MAAT,GAAkBE,QAAQ,CAACC,KAA/B,EAAsC;UACtC;UACAC,KAAK,CAAC,2CAAD,CAAL;UACAH,QAAQ,CAAC,KAAD,CAAR;UACAR,aAAa,GAAG,IAAhB;UACA;QACC;MACJ,CAXmB,CAapB;;IACH,CAdD;IAeAH,gBAAgB,CAACE,QAAD,CAAhB;EAEH,CApBD;;EAsBA,MAAMa,eAAe,GAAKC,CAAD,IAAO;IAC5B;IACA,MAAMC,WAAW,GAAGzB,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BqB,CAAC,CAACpB,MAAF,CAASC,KAApC,CAApB;IACAI,iBAAiB,CAACgB,WAAD,CAAjB;EACH,CAJD;;EAKH,oBACC;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEC;MAAO,EAAE,EAAC,YAAV;MAAuB,IAAI,EAAC,MAA5B;MAAmC,QAAQ,MAA3C;MACE,MAAM,EAAC,4BADT;MAEiB,QAAQ,EAAEF;IAF3B;MAAA;MAAA;MAAA;IAAA,QAFD,eAMC;MAAO,OAAO,EAAC,YAAf;MAAA,uBACC;QAAI,SAAS,EAAC,iBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAND,eAUC;MAAK,SAAS,EAAC,qBAAf;MAAA,UACEhB,aAAa,CAACmB,GAAd,CAAkBb,IAAI,iBACP;QAAA,UACKA,IAAI,CAACG;MADV;QAAA;QAAA;QAAA;MAAA,QADf;IADF;MAAA;MAAA;MAAA;IAAA,QAVD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAqBA;;GArDQV,G;;KAAAA,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}